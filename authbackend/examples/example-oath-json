#!/usr/bin/python
#
# Produce example OATH JSON to be POSTed to authbackend
#
#
# HSM> keyload
# 00002001,2001200120012001200120012001200120012001200120012001200120012001
# HSM> keycommit
#
# $ ./example-oath-json | curl --data-urlencode request@- -v localhost:8080/authenticate
#

import os
import sys
import hmac
import json
import time
import pyhsm
import struct
import hashlib
import pyhsm.oath_hotp

debug = False

nist_test_key = '303132333435363738393a3b3c3d3e3f40414243'.decode('hex')

def oath_code(hmac_key, counter, length=6):
    counter = struct.pack("> Q", counter)
    hmac_result = hmac.new(nist_test_key, counter, hashlib.sha1).digest()
    code = pyhsm.oath_hotp.truncate(hmac_result, length=length)
    fmt = "%%.%ii" % (length)  # leading zero padding
    code_str = fmt % (code)
    return code_str

# Now, calculate an OATH code for the current time
totp_counter = int(time.time()) / 30
code_str = oath_code(nist_test_key, totp_counter)

sys.stderr.write("OATH-TOTP code : %s (for counter=%i)\n" % (code_str, totp_counter))

a = {'auth':
         {'version': 1,
          'user_id': 'ft@nordu.net',
          'factors': [
            {'type': 'oath-totp',
             'credential_id': 4711,
             'user_code': code_str,
             }
            ]
          }
     }

print json.dumps(a, sort_keys=True, indent=4)

sys.stderr.write("\nCan't test HOTP since we can't know what counter to use\n")

